package files;

import java.io.BufferedReader;
import java.io.FileReader;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import javax.swing.JOptionPane;

public class Search extends javax.swing.JFrame {

    /**
     * Creates new form Search
     */
    public Search() {
        initComponents();
        this.setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jButton2 = new javax.swing.JButton();
        jRadioButton1 = new javax.swing.JRadioButton();
        jRadioButton2 = new javax.swing.JRadioButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jRadioButton3 = new javax.swing.JRadioButton();
        jRadioButton4 = new javax.swing.JRadioButton();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("EMPLOYEE ID");

        jButton1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jButton1.setText("SEARCH");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jTextArea1.setEditable(false);
        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        jButton2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jButton2.setText("BACK");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jRadioButton1.setText("MALES");
        jRadioButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton1ActionPerformed(evt);
            }
        });

        jRadioButton2.setText("FEMALES");
        jRadioButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton2ActionPerformed(evt);
            }
        });

        jLabel2.setText("0");

        jLabel3.setText("0");

        jLabel4.setText("FILTER BY CITY");

        jRadioButton3.setText("Gaborone");
        jRadioButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton3ActionPerformed(evt);
            }
        });

        jRadioButton4.setText("Francistown");
        jRadioButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton4ActionPerformed(evt);
            }
        });

        jLabel5.setText("0");

        jLabel6.setText("0");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createSequentialGroup()
                                                .addGap(281, 281, 281)
                                                .addComponent(jButton2))
                                        .addGroup(layout.createSequentialGroup()
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addGroup(layout.createSequentialGroup()
                                                                .addGap(160, 160, 160)
                                                                .addComponent(jLabel1))
                                                        .addGroup(layout.createSequentialGroup()
                                                                .addContainerGap()
                                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                                                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                                                                .addComponent(jRadioButton2)
                                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                                                .addComponent(jLabel3))
                                                                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                                                                .addComponent(jRadioButton1)
                                                                                .addGap(33, 33, 33)
                                                                                .addComponent(jLabel2))))
                                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                                                        .addContainerGap()
                                                                        .addComponent(jRadioButton4)
                                                                        .addGap(44, 44, 44)
                                                                        .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                                                        .addContainerGap()
                                                                        .addComponent(jRadioButton3)
                                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                                        .addComponent(jLabel5))
                                                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                                                        .addGap(65, 65, 65)
                                                                        .addComponent(jLabel4))))
                                                .addGap(61, 61, 61)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 399, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addGroup(layout.createSequentialGroup()
                                                                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                .addGap(26, 26, 26)
                                                                .addComponent(jButton1)))))
                                .addContainerGap(17, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addGap(32, 32, 32)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel1)
                                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jButton1))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createSequentialGroup()
                                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 228, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(50, 50, 50)
                                                .addComponent(jButton2))
                                        .addGroup(layout.createSequentialGroup()
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                        .addComponent(jRadioButton1)
                                                        .addComponent(jLabel2))
                                                .addGap(28, 28, 28)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                        .addComponent(jRadioButton2)
                                                        .addComponent(jLabel3))
                                                .addGap(61, 61, 61)
                                                .addComponent(jLabel4)
                                                .addGap(28, 28, 28)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                        .addComponent(jRadioButton3)
                                                        .addComponent(jLabel5))
                                                .addGap(18, 18, 18)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                        .addComponent(jRadioButton4)
                                                        .addComponent(jLabel6))))
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        String filePath = "/Users/mac/Desktop/humanRMS/src/files/File.txt";
        String keyword = jTextField1.getText().trim();
        jTextArea1.setText(""); // Clear previous results

        try (BufferedReader br = new BufferedReader(new FileReader(filePath))) {
            String line;
            while ((line = br.readLine()) != null) {
                String[] parts = line.split(","); // Assuming comma (",") is the field separator
                if (parts.length > 0) {
                    String firstField = parts[0].trim();
                    if (firstField.equals(keyword)) {
                        String field1 = parts[0].trim();
                        String field2 = parts[1].trim();
                        String field3 = parts[2].trim();
                        String field4 = parts[3].trim();
                        String field5 = parts[4].trim();
                        String field6 = parts[5].trim();
                        String field7 = parts[6].trim();
                        String field8 = parts[7].trim();
                        String field9 = parts[8].trim();
                        String field10 = parts[9].trim();
                        String field11 = parts[10].trim();
                        String field12 = parts[11].trim();

                        jTextArea1.append("EMPLOYEE ID : " + field1 + "\n");
                        jTextArea1.append("FIRST NAME : " + field2 + "\n");
                        jTextArea1.append("LAST NAME : " + field3 + "\n");
                        jTextArea1.append("GENDER : " + field4 + "\n");
                        jTextArea1.append("DATE OF BIRTH : " + field5 + "\n");
                        jTextArea1.append("POSTAL ADDRESS : " + field6 + "\n");
                        jTextArea1.append("PLACE OF WORK : " + field7 + "\n");
                        jTextArea1.append("POSITION : " + field8 + "\n");
                        jTextArea1.append("ROLE : " + field9 + "\n");
                        jTextArea1.append("SINCE : " + field10 + "\n");
                        jTextArea1.append("HOUSE WORKED : " + field11 + "\n");
                        jTextArea1.append("PAYRATE : " + field12 + "\n");
                        jTextArea1.append("---------------------\n"); // Add a separator line between search results


                    }
                }
            }
        } catch (IOException e) {
            e.printStackTrace();
        }

    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        setVisible(false);
        Menu ob = new Menu();
        ob.setVisible(true);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jRadioButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton1ActionPerformed
        // TODO add your handling code here:
        String filePath = "/Users/mac/Desktop/humanRMS/src/files/File.txt";
        int columnIndex = 3; // Specify the column index to search in (zero-based)
        String keyword = "M"; // Specify the keyword to search for
        jTextArea1.setText("");

        List<Integer> selectedColumns = Arrays.asList(0, 1, 2, 3); // Specify the column indices to print (zero-based)

        int rowCount = 0; // Counter for the number of rows

        try (BufferedReader br = new BufferedReader(new FileReader(filePath))) {
            String line;

            while ((line = br.readLine()) != null) {
                String[] parts = line.split(","); // Assuming comma (",") is the field separator
                if (columnIndex >= 0 && columnIndex < parts.length) {
                    String value = parts[columnIndex].trim();
                    if (value.equalsIgnoreCase(keyword)) {
                        StringBuilder outputBuilder = new StringBuilder();
                        for (int columnIndexToPrint : selectedColumns) {
                            if (columnIndexToPrint >= 0 && columnIndexToPrint < parts.length) {
                                outputBuilder.append(parts[columnIndexToPrint].trim()).append("\t");
                            }
                        }
                        if (outputBuilder.length() > 0) {
                            outputBuilder.delete(outputBuilder.length() - 1, outputBuilder.length()); // Remove the trailing tab
                            //jTextArea1.append(line);

                            jTextArea1.append("\n" + outputBuilder.toString());
                            System.out.println();
                        }
                        rowCount++; // Increment the row count
                    }
                }
            }
        } catch (IOException e) {
            e.printStackTrace();
        }

        jLabel2.setText(" " + rowCount);
    }//GEN-LAST:event_jRadioButton1ActionPerformed

    private void jRadioButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton2ActionPerformed
        // TODO add your handling code here:
        String filePath = "/Users/mac/Desktop/humanRMS/src/files/File.txt";
        int columnIndex = 3; // Specify the column index to search in (zero-based)
        String keyword = "F"; // Specify the keyword to search for
        jTextArea1.setText("");

        List<Integer> selectedColumns = Arrays.asList(0, 1, 2, 3); // Specify the column indices to print (zero-based)

        int rowCount = 0; // Counter for the number of rows

        try (BufferedReader br = new BufferedReader(new FileReader(filePath))) {
            String line;

            while ((line = br.readLine()) != null) {
                String[] parts = line.split(","); // Assuming comma (",") is the field separator
                if (columnIndex >= 0 && columnIndex < parts.length) {
                    String value = parts[columnIndex].trim();
                    if (value.equalsIgnoreCase(keyword)) {
                        StringBuilder outputBuilder = new StringBuilder();
                        for (int columnIndexToPrint : selectedColumns) {
                            if (columnIndexToPrint >= 0 && columnIndexToPrint < parts.length) {
                                outputBuilder.append(parts[columnIndexToPrint].trim()).append("\t");
                            }
                        }
                        if (outputBuilder.length() > 0) {
                            outputBuilder.delete(outputBuilder.length() - 1, outputBuilder.length()); // Remove the trailing tab
                            //jTextArea1.append(line);

                            jTextArea1.append("\n" + outputBuilder.toString());
                            System.out.println();
                        }
                        rowCount++; // Increment the row count
                    }
                }
            }
        } catch (IOException e) {
            e.printStackTrace();
        }

        jLabel3.setText(" " + rowCount);
    }//GEN-LAST:event_jRadioButton2ActionPerformed

    private void jRadioButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton3ActionPerformed
        // TODO add your handling code here:
        String filePath = "/Users/mac/Desktop/humanRMS/src/files/File.txt";
        int columnIndex = 6; // Specify the column index to search in (zero-based)
        String keyword = "Gaborone"; // Specify the keyword to search for
        jTextArea1.setText("");

        List<Integer> selectedColumns = Arrays.asList(0, 1, 2, 6); // Specify the column indices to print (zero-based)

        int rowCount = 0; // Counter for the number of rows

        try (BufferedReader br = new BufferedReader(new FileReader(filePath))) {
            String line;

            while ((line = br.readLine()) != null) {
                String[] parts = line.split(","); // Assuming comma (",") is the field separator
                if (columnIndex >= 0 && columnIndex < parts.length) {
                    String value = parts[columnIndex].trim();
                    if (value.equalsIgnoreCase(keyword)) {
                        StringBuilder outputBuilder = new StringBuilder();
                        for (int columnIndexToPrint : selectedColumns) {
                            if (columnIndexToPrint >= 0 && columnIndexToPrint < parts.length) {
                                outputBuilder.append(parts[columnIndexToPrint].trim()).append("\t");
                            }
                        }
                        if (outputBuilder.length() > 0) {
                            outputBuilder.delete(outputBuilder.length() - 1, outputBuilder.length()); // Remove the trailing tab
                            //jTextArea1.append(line);

                            jTextArea1.append("\n" + outputBuilder.toString());
                            System.out.println();
                        }
                        rowCount++; // Increment the row count
                    }
                }
            }
        } catch (IOException e) {
            e.printStackTrace();
        }

        jLabel5.setText(" " + rowCount);
    }//GEN-LAST:event_jRadioButton3ActionPerformed

    private void jRadioButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton4ActionPerformed
        // TODO add your handling code here:
        String filePath = "/Users/mac/Desktop/humanRMS/src/files/File.txt";
        int columnIndex = 6; // Specify the column index to search in (zero-based)
        String keyword = "Francistown"; // Specify the keyword to search for
        jTextArea1.setText("");

        List<Integer> selectedColumns = Arrays.asList(0, 1, 2, 6); // Specify the column indices to print (zero-based)

        int rowCount = 0; // Counter for the number of rows

        try (BufferedReader br = new BufferedReader(new FileReader(filePath))) {
            String line;

            while ((line = br.readLine()) != null) {
                String[] parts = line.split(","); // Assuming comma (",") is the field separator
                if (columnIndex >= 0 && columnIndex < parts.length) {
                    String value = parts[columnIndex].trim();
                    if (value.equalsIgnoreCase(keyword)) {
                        StringBuilder outputBuilder = new StringBuilder();
                        for (int columnIndexToPrint : selectedColumns) {
                            if (columnIndexToPrint >= 0 && columnIndexToPrint < parts.length) {
                                outputBuilder.append(parts[columnIndexToPrint].trim()).append("\t");
                            }
                        }
                        if (outputBuilder.length() > 0) {
                            outputBuilder.delete(outputBuilder.length() - 1, outputBuilder.length()); // Remove the trailing tab
                            //jTextArea1.append(line);

                            jTextArea1.append("\n" + outputBuilder.toString());
                            System.out.println();
                        }
                        rowCount++; // Increment the row count
                    }
                }
            }
        } catch (IOException e) {
            e.printStackTrace();
        }

        jLabel6.setText(" " + rowCount);
    }//GEN-LAST:event_jRadioButton4ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Search.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Search.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Search.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Search.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Search().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JRadioButton jRadioButton2;
    private javax.swing.JRadioButton jRadioButton3;
    private javax.swing.JRadioButton jRadioButton4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables
}
